apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubevip-config-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubevip-config-controller
  template:
    metadata:
      labels:
        app: kubevip-config-controller
    spec:
      serviceAccountName: kubevip-config-controller
      hostNetwork: true
      containers:
      - name: controller
        image: node:18-slim
        command:
        - bash
        - -c
        - >
          echo {} > package.json &&
          npm install ip &&
          npx zx --install /scripts/controller.mjs
        volumeMounts:
        - name: script
          mountPath: /scripts
      volumes:
      - name: script
        configMap:
          name: kubevip-config-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubevip-config-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubevip-config-controller
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubevip-config-controller
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubevip-config-controller
subjects:
- kind: ServiceAccount
  name: kubevip-config-controller
  namespace: kube-system  
